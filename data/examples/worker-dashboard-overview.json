{
  "$schema": "../schema/recipe-schema-2.1.0-ai-context.json",
  "title": "Worker dashboard overview",
  "description": "Create comprehensive operational dashboards for government workers with case management, statistics overview, priority queues, and bulk action capabilities for efficient workflow management.",
  "category": "layout-patterns",
  "tags": [
    "dashboard",
    "case-management",
    "worker-productivity",
    "bulk-actions",
    "workload-overview"
  ],
  "government_service_context": {
    "citizen_flows": {
      "applicable": false,
      "usage": "This pattern is designed specifically for government workers rather than citizen-facing interfaces."
    },
    "worker_flows": {
      "applicable": true,
      "usage": "Government workers need efficient dashboards to manage caseloads, track deadlines, monitor statistics, and perform bulk operations across multiple cases or applications."
    },
    "shared_components": {
      "applicable": true,
      "usage": "Dashboard patterns can be adapted for any professional interface requiring overview statistics, task management, and efficient bulk operations."
    }
  },
  "component_analysis": {
    "primary_components": [
      {
        "name": "Worker Context Header",
        "role": "Displays worker identity, role, and department information",
        "purpose": "Provides immediate context about the logged-in worker and their organizational position"
      },
      {
        "name": "Statistics Callout Grid",
        "role": "Shows key performance metrics and workload statistics in visual cards",
        "purpose": "Enables quick assessment of current workload, priorities, and performance indicators"
      },
      {
        "name": "Priority Cases Table",
        "role": "Lists urgent or high-priority cases requiring immediate attention",
        "purpose": "Focuses worker attention on most critical tasks and upcoming deadlines"
      },
      {
        "name": "Bulk Action Controls",
        "role": "Enables selection and batch processing of multiple cases",
        "purpose": "Improves efficiency by allowing workers to perform operations on multiple items simultaneously"
      },
      {
        "name": "Responsive Case Views",
        "role": "Adapts between table view (desktop) and card view (mobile)",
        "purpose": "Ensures dashboard usability across different device types and screen sizes"
      },
      {
        "name": "Recent Activity Timeline",
        "role": "Shows chronological list of recent actions and updates",
        "purpose": "Provides audit trail and helps workers track progress and maintain context"
      }
    ],
    "accessibility_features": [
      "Table headers are properly structured for screen reader navigation",
      "Status badges include semantic meaning through color and text",
      "Checkboxes for bulk selection are properly labeled",
      "Responsive design maintains accessibility across device types",
      "Clear visual hierarchy guides attention to priority information"
    ],
    "user_experience_notes": [
      "Statistics are prominently displayed using colored callouts for quick scanning",
      "Overdue items are visually highlighted with emergency styling",
      "Bulk actions appear contextually when items are selected",
      "Mobile view uses cards instead of tables for better touch interaction",
      "Clear action buttons for common workflow operations",
      "Priority and status information uses consistent badge styling"
    ]
  },
  "implementation": {
    "react": {
      "code": "import React, { useState, useEffect } from 'react';\nimport {\n  GoabBlock,\n  GoabButton,\n  GoabContainer,\n  GoabCallout,\n  GoabGrid,\n  GoabTable,\n  GoabBadge,\n  GoabText,\n  GoabFormItem,\n  GoabDropdown,\n  GoabDropdownItem,\n  GoabButtonGroup,\n  GoabCheckbox\n} from '@abgov/react-components';\nimport { GoabDropdownOnChangeDetail, GoabCheckboxOnChangeDetail } from '@abgov/ui-components-common';\n\ninterface CaseItem {\n  id: string;\n  applicantName: string;\n  type: string;\n  priority: 'high' | 'medium' | 'low';\n  dueDate: string;\n  daysOverdue: number;\n  status: 'pending' | 'in-progress' | 'completed';\n}\n\ninterface WorkerInfo {\n  name: string;\n  role: string;\n  department: string;\n  employeeId: string;\n}\n\ninterface DashboardStats {\n  overdueCount: number;\n  pendingReviewCount: number;\n  newAssignmentsCount: number;\n  completedTodayCount: number;\n}\n\nfunction WorkerDashboardOverview() {\n  const [selectedCases, setSelectedCases] = useState<string[]>([]);\n  const [selectedAssignee, setSelectedAssignee] = useState<string>('');\n  const [isMobile, setIsMobile] = useState<boolean>(false);\n\n  // Mock data - replace with actual API calls\n  const workerInfo: WorkerInfo = {\n    name: 'Sarah Johnson',\n    role: 'Case Manager',\n    department: 'Housing Services',\n    employeeId: 'HM-2024-001'\n  };\n\n  const dashboardStats: DashboardStats = {\n    overdueCount: 5,\n    pendingReviewCount: 12,\n    newAssignmentsCount: 8,\n    completedTodayCount: 3\n  };\n\n  const priorityCases: CaseItem[] = [\n    {\n      id: 'HSG-2024-0891',\n      applicantName: 'Martinez, Elena',\n      type: 'Emergency Housing',\n      priority: 'high',\n      dueDate: '2024-01-15',\n      daysOverdue: 2,\n      status: 'pending'\n    },\n    {\n      id: 'HSG-2024-0892',\n      applicantName: 'Thompson, Michael',\n      type: 'Rental Assistance',\n      priority: 'high',\n      dueDate: '2024-01-16',\n      daysOverdue: 1,\n      status: 'pending'\n    },\n    {\n      id: 'HSG-2024-0893',\n      applicantName: 'Chen, Li Wei',\n      type: 'Housing Repair',\n      priority: 'medium',\n      dueDate: '2024-01-17',\n      daysOverdue: 0,\n      status: 'in-progress'\n    }\n  ];\n\n  const recentActivity = [\n    {\n      time: '9:15 AM',\n      action: 'Approved housing application',\n      caseId: 'HSG-2024-0887',\n      applicant: 'Davis, Jennifer'\n    },\n    {\n      time: '8:45 AM',\n      action: 'Requested additional documentation',\n      caseId: 'HSG-2024-0888',\n      applicant: 'Brown, Michael'\n    },\n    {\n      time: '8:30 AM',\n      action: 'Scheduled site inspection',\n      caseId: 'HSG-2024-0889',\n      applicant: 'Wilson, Sarah'\n    }\n  ];\n\n  const teamMembers = [\n    'Johnson, Sarah (Current User)',\n    'Anderson, Mark',\n    'Williams, Jennifer',\n    'Brown, David',\n    'Taylor, Lisa'\n  ];\n\n  // Event handlers\n  const handleCaseSelection = (caseId: string, checked: boolean) => {\n    setSelectedCases(prev => \n      checked \n        ? [...prev, caseId]\n        : prev.filter(id => id !== caseId)\n    );\n  };\n\n  const handleBulkAssign = () => {\n    if (selectedCases.length > 0 && selectedAssignee) {\n      console.log(`Assigning ${selectedCases.length} cases to ${selectedAssignee}`);\n      // API call to assign cases\n      setSelectedCases([]);\n      setSelectedAssignee('');\n    }\n  };\n\n  const onAssigneeChange = (event: GoabDropdownOnChangeDetail) => {\n    setSelectedAssignee(event.value);\n  };\n\n  const onCheckboxChange = (caseId: string, event: GoabCheckboxOnChangeDetail) => {\n    handleCaseSelection(caseId, event.checked);\n  };\n\n  const getBadgeType = (priority: string) => {\n    switch (priority) {\n      case 'high': return 'emergency';\n      case 'medium': return 'important';\n      case 'low': return 'information';\n      default: return 'midtone';\n    }\n  };\n\n  const getStatusBadgeType = (status: string) => {\n    switch (status) {\n      case 'pending': return 'important';\n      case 'in-progress': return 'information';\n      case 'completed': return 'success';\n      default: return 'midtone';\n    }\n  };\n\n  // Responsive handling\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth < 768);\n    };\n    \n    handleResize();\n    window.addEventListener('resize', handleResize);\n    \n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return (\n    <div className=\"worker-dashboard\">\n      {/* Worker Context Header */}\n      <GoabBlock direction=\"row\" gap=\"xl\" alignment=\"center\" mb=\"l\">\n        <GoabBlock direction=\"column\" gap=\"xs\">\n          <GoabText size=\"heading-m\" mb=\"none\">\n            Welcome back, {workerInfo.name}\n          </GoabText>\n          <GoabText size=\"body-s\" mb=\"none\">\n            {workerInfo.role} • {workerInfo.department} • {workerInfo.employeeId}\n          </GoabText>\n        </GoabBlock>\n        <GoabButton type=\"tertiary\" size=\"compact\" leadingIcon=\"notifications\">\n          View Notifications\n        </GoabButton>\n      </GoabBlock>\n\n      {/* Dashboard Statistics */}\n      <GoabGrid minChildWidth=\"200px\" gap=\"m\" mb=\"xl\">\n        <GoabCallout\n          type=\"emergency\"\n          size=\"medium\"\n          heading={`${dashboardStats.overdueCount} overdue cases`}\n          mb=\"none\"\n        />\n        \n        <GoabCallout\n          type=\"important\"\n          size=\"medium\"\n          heading={`${dashboardStats.pendingReviewCount} pending reviews`}\n          mb=\"none\"\n        />\n        \n        <GoabCallout\n          type=\"information\"\n          size=\"medium\"\n          heading={`${dashboardStats.newAssignmentsCount} new assignments`}\n          mb=\"none\"\n        />\n        \n        <GoabCallout\n          type=\"success\"\n          size=\"medium\"\n          heading={`${dashboardStats.completedTodayCount} completed today`}\n          mb=\"none\"\n        />\n      </GoabGrid>\n\n      {/* Priority Cases Section */}\n      <GoabBlock direction=\"row\" gap=\"xl\" alignment=\"center\" mb=\"l\">\n        <GoabText size=\"heading-m\" mb=\"none\">\n          Priority Cases\n        </GoabText>\n        <GoabButton type=\"tertiary\" size=\"compact\" leadingIcon=\"filter\">\n          Filter Cases\n        </GoabButton>\n      </GoabBlock>\n\n      {/* Bulk Actions */}\n      {selectedCases.length > 0 && (\n        <GoabContainer type=\"non-interactive\" accent=\"thin\" mb=\"m\">\n          <GoabBlock direction=\"row\" gap=\"m\" alignment=\"center\">\n            <GoabText size=\"body-m\" mb=\"none\">\n              Assign {selectedCases.length} case{selectedCases.length > 1 ? 's' : ''} to\n            </GoabText>\n            <GoabFormItem>\n              <GoabDropdown\n                value={selectedAssignee}\n                onChange={onAssigneeChange}\n                name=\"assignee\"\n                width=\"200px\"\n              >\n                {teamMembers.map((member, index) => (\n                  <GoabDropdownItem key={index} value={member} label={member} />\n                ))}\n              </GoabDropdown>\n            </GoabFormItem>\n            <GoabButtonGroup alignment=\"start\" gap=\"compact\">\n              <GoabButton\n                type=\"primary\"\n                size=\"compact\"\n                onClick={handleBulkAssign}\n                disabled={!selectedAssignee}\n              >\n                Assign\n              </GoabButton>\n              <GoabButton\n                type=\"tertiary\"\n                size=\"compact\"\n                onClick={() => setSelectedCases([])}\n              >\n                Clear\n              </GoabButton>\n            </GoabButtonGroup>\n          </GoabBlock>\n        </GoabContainer>\n      )}\n\n      {/* Desktop Table View */}\n      {!isMobile && (\n        <GoabTable width=\"100%\" mb=\"xl\">\n          <thead>\n            <tr>\n              <th style={{ width: '40px' }}>Select</th>\n              <th style={{ width: '80px' }}>Priority</th>\n              <th>Case ID</th>\n              <th>Applicant</th>\n              <th>Type</th>\n              <th>Due Date</th>\n              <th style={{ width: '80px' }}>Status</th>\n              <th style={{ width: '100px' }}>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {priorityCases.map((caseItem) => (\n              <tr\n                key={caseItem.id}\n                style={{\n                  backgroundColor: caseItem.daysOverdue > 0 ? '#FFF5F5' : undefined\n                }}\n              >\n                <td>\n                  <GoabCheckbox\n                    name={`case-${caseItem.id}`}\n                    checked={selectedCases.includes(caseItem.id)}\n                    onChange={(e) => onCheckboxChange(caseItem.id, e)}\n                  />\n                </td>\n                <td>\n                  <GoabBadge\n                    type={getBadgeType(caseItem.priority)}\n                    content={caseItem.priority}\n                  />\n                </td>\n                <td>\n                  <GoabText size=\"body-s\" mb=\"none\">\n                    {caseItem.id}\n                  </GoabText>\n                </td>\n                <td>\n                  <GoabText size=\"body-m\" mb=\"none\">\n                    {caseItem.applicantName}\n                  </GoabText>\n                </td>\n                <td>\n                  <GoabText size=\"body-s\" mb=\"none\">\n                    {caseItem.type}\n                  </GoabText>\n                </td>\n                <td>\n                  <GoabBlock direction=\"column\" gap=\"xs\">\n                    <GoabText size=\"body-s\" mb=\"none\">\n                      {caseItem.dueDate}\n                    </GoabText>\n                    {caseItem.daysOverdue > 0 && (\n                      <GoabText size=\"body-xs\" mb=\"none\">\n                        {caseItem.daysOverdue} day{caseItem.daysOverdue > 1 ? 's' : ''} overdue\n                      </GoabText>\n                    )}\n                  </GoabBlock>\n                </td>\n                <td>\n                  <GoabBadge\n                    type={getStatusBadgeType(caseItem.status)}\n                    content={caseItem.status}\n                  />\n                </td>\n                <td>\n                  <GoabButton\n                    type=\"tertiary\"\n                    size=\"compact\"\n                    onClick={() => console.log(`View case ${caseItem.id}`)}\n                  >\n                    View\n                  </GoabButton>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </GoabTable>\n      )}\n\n      {/* Mobile Card View */}\n      {isMobile && (\n        <GoabBlock direction=\"column\" gap=\"m\" mb=\"xl\">\n          {priorityCases.map((caseItem) => (\n            <GoabContainer\n              key={caseItem.id}\n              accent=\"filled\"\n              mb=\"none\"\n            >\n              {caseItem.daysOverdue > 0 && (\n                <GoabCallout type=\"emergency\" size=\"medium\" heading=\"Overdue\" mb=\"s\">\n                  {caseItem.daysOverdue} day{caseItem.daysOverdue > 1 ? 's' : ''} overdue\n                </GoabCallout>\n              )}\n              \n              <GoabGrid minChildWidth=\"auto\" gap=\"m\">\n                <GoabBlock direction=\"column\" gap=\"xs\">\n                  <GoabCheckbox\n                    name={`case-${caseItem.id}`}\n                    checked={selectedCases.includes(caseItem.id)}\n                    onChange={(e) => onCheckboxChange(caseItem.id, e)}\n                  />\n                </GoabBlock>\n                \n                <GoabBlock direction=\"column\" gap=\"xs\">\n                  <GoabBlock direction=\"row\" gap=\"s\" alignment=\"center\">\n                    <GoabBadge\n                      type={getBadgeType(caseItem.priority)}\n                      content={caseItem.priority}\n                    />\n                    <GoabBadge\n                      type={getStatusBadgeType(caseItem.status)}\n                      content={caseItem.status}\n                    />\n                  </GoabBlock>\n                  \n                  <GoabText size=\"body-m\" mb=\"none\">\n                    <strong>{caseItem.applicantName}</strong>\n                  </GoabText>\n                  \n                  <GoabText size=\"body-s\" mb=\"none\">\n                    {caseItem.id} • {caseItem.type}\n                  </GoabText>\n                  \n                  <GoabText size=\"body-s\" mb=\"none\">\n                    Due: {caseItem.dueDate}\n                  </GoabText>\n                </GoabBlock>\n                \n                <GoabBlock direction=\"column\" gap=\"xs\">\n                  <GoabButton\n                    type=\"tertiary\"\n                    size=\"compact\"\n                    onClick={() => console.log(`View case ${caseItem.id}`)}\n                  >\n                    View\n                  </GoabButton>\n                </GoabBlock>\n              </GoabGrid>\n            </GoabContainer>\n          ))}\n        </GoabBlock>\n      )}\n\n      {/* Recent Activity */}\n      <GoabContainer accent=\"filled\">\n        <GoabText size=\"heading-m\" mb=\"m\">\n          Recent Activity\n        </GoabText>\n        <GoabBlock direction=\"column\" gap=\"m\">\n          {recentActivity.map((activity, index) => (\n            <GoabBlock key={index} direction=\"row\" gap=\"m\" alignment=\"center\">\n              <GoabText size=\"body-s\" mb=\"none\">\n                {activity.time}\n              </GoabText>\n              <GoabText size=\"body-m\" mb=\"none\">\n                {activity.action}\n              </GoabText>\n              <GoabText size=\"body-s\" mb=\"none\">\n                {activity.caseId}\n              </GoabText>\n              <GoabText size=\"body-s\" mb=\"none\">\n                {activity.applicant}\n              </GoabText>\n            </GoabBlock>\n          ))}\n        </GoabBlock>\n        <GoabButton type=\"tertiary\" size=\"compact\" mt=\"m\">\n          View All Activity\n        </GoabButton>\n      </GoabContainer>\n    </div>\n  );\n}\n\n// Reusable dashboard stat component\nfunction DashboardStatGrid({ stats }: { stats: DashboardStats }) {\n  return (\n    <GoabGrid minChildWidth=\"200px\" gap=\"m\" mb=\"xl\">\n      <GoabCallout\n        type=\"emergency\"\n        size=\"medium\"\n        heading={`${stats.overdueCount} overdue cases`}\n        mb=\"none\"\n      />\n      \n      <GoabCallout\n        type=\"important\"\n        size=\"medium\"\n        heading={`${stats.pendingReviewCount} pending reviews`}\n        mb=\"none\"\n      />\n      \n      <GoabCallout\n        type=\"information\"\n        size=\"medium\"\n        heading={`${stats.newAssignmentsCount} new assignments`}\n        mb=\"none\"\n      />\n      \n      <GoabCallout\n        type=\"success\"\n        size=\"medium\"\n        heading={`${stats.completedTodayCount} completed today`}\n        mb=\"none\"\n      />\n    </GoabGrid>\n  );\n}",
      "styling": ".worker-dashboard {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: var(--goa-space-m);\n}\n\n.worker-dashboard .overdue-row {\n  background-color: var(--goa-color-status-emergency-light);\n}\n\n.worker-dashboard .priority-high {\n  background-color: var(--goa-color-status-emergency);\n}\n\n.worker-dashboard .priority-medium {\n  background-color: var(--goa-color-status-warning);\n}\n\n.worker-dashboard .priority-low {\n  background-color: var(--goa-color-status-information);\n}\n\n.worker-dashboard .bulk-actions {\n  background-color: var(--goa-color-greyscale-100);\n  border: var(--goa-border-width-s) solid var(--goa-color-greyscale-400);\n  border-radius: var(--goa-border-radius-m);\n  padding: var(--goa-space-m);\n  margin-bottom: var(--goa-space-m);\n}\n\n.worker-dashboard .case-card {\n  border-left: var(--goa-border-width-l) solid var(--goa-color-greyscale-400);\n}\n\n.worker-dashboard .case-card.overdue {\n  border-left-color: var(--goa-color-status-emergency);\n  background-color: var(--goa-color-status-emergency-light);\n}\n\n.worker-dashboard .activity-item {\n  border-bottom: var(--goa-border-width-s) solid var(--goa-color-greyscale-200);\n  padding: var(--goa-space-s) 0;\n}\n\n.worker-dashboard .activity-item:last-child {\n  border-bottom: none;\n}\n\n@media (max-width: 768px) {\n  .worker-dashboard {\n    padding: var(--goa-space-s);\n  }\n  \n  .worker-dashboard .stats-grid {\n    grid-template-columns: 1fr;\n  }\n}"
    },
    "angular": {
      "code": "import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { GoabDropdownOnChangeDetail, GoabCheckboxOnChangeDetail } from '@abgov/ui-components-common';\n\ninterface CaseItem {\n  id: string;\n  applicantName: string;\n  type: string;\n  priority: 'high' | 'medium' | 'low';\n  dueDate: string;\n  daysOverdue: number;\n  status: 'pending' | 'in-progress' | 'completed';\n}\n\ninterface WorkerInfo {\n  name: string;\n  role: string;\n  department: string;\n  employeeId: string;\n}\n\ninterface DashboardStats {\n  overdueCount: number;\n  pendingReviewCount: number;\n  newAssignmentsCount: number;\n  completedTodayCount: number;\n}\n\n@Component({\n  selector: 'app-worker-dashboard',\n  template: `\n    <div class=\"worker-dashboard\">\n      <!-- Worker Context Header -->\n      <goab-block direction=\"row\" gap=\"xl\" alignment=\"center\" mb=\"l\">\n        <goab-block direction=\"column\" gap=\"xs\">\n          <goab-text size=\"heading-m\" mb=\"none\">\n            Welcome back, {{ workerInfo.name }}\n          </goab-text>\n          <goab-text size=\"body-s\" mb=\"none\">\n            {{ workerInfo.role }} • {{ workerInfo.department }} • {{ workerInfo.employeeId }}\n          </goab-text>\n        </goab-block>\n        <goab-button type=\"tertiary\" size=\"compact\" leadingIcon=\"notifications\">\n          View Notifications\n        </goab-button>\n      </goab-block>\n\n      <!-- Dashboard Statistics -->\n      <goab-grid minChildWidth=\"200px\" gap=\"m\" mb=\"xl\">\n        <goab-callout\n          type=\"emergency\"\n          size=\"medium\"\n          [heading]=\"dashboardStats.overdueCount + ' overdue cases'\"\n          mb=\"none\"\n        ></goab-callout>\n        \n        <goab-callout\n          type=\"important\"\n          size=\"medium\"\n          [heading]=\"dashboardStats.pendingReviewCount + ' pending reviews'\"\n          mb=\"none\"\n        ></goab-callout>\n        \n        <goab-callout\n          type=\"information\"\n          size=\"medium\"\n          [heading]=\"dashboardStats.newAssignmentsCount + ' new assignments'\"\n          mb=\"none\"\n        ></goab-callout>\n        \n        <goab-callout\n          type=\"success\"\n          size=\"medium\"\n          [heading]=\"dashboardStats.completedTodayCount + ' completed today'\"\n          mb=\"none\"\n        ></goab-callout>\n      </goab-grid>\n\n      <!-- Priority Cases Section -->\n      <goab-block direction=\"row\" gap=\"xl\" alignment=\"center\" mb=\"l\">\n        <goab-text size=\"heading-m\" mb=\"none\">\n          Priority Cases\n        </goab-text>\n        <goab-button type=\"tertiary\" size=\"compact\" leadingIcon=\"filter\">\n          Filter Cases\n        </goab-button>\n      </goab-block>\n\n      <!-- Bulk Actions -->\n      <goab-container \n        *ngIf=\"selectedCases.length > 0\" \n        type=\"non-interactive\" \n        accent=\"thin\" \n        mb=\"m\"\n      >\n        <goab-block direction=\"row\" gap=\"m\" alignment=\"center\">\n          <goab-text size=\"body-m\" mb=\"none\">\n            Assign {{ selectedCases.length }} case{{ selectedCases.length > 1 ? 's' : '' }} to\n          </goab-text>\n          <goab-form-item>\n            <goab-dropdown\n              [value]=\"selectedAssignee\"\n              (onChange)=\"onAssigneeChange($event)\"\n              name=\"assignee\"\n              width=\"200px\"\n            >\n              <goab-dropdown-item \n                *ngFor=\"let member of teamMembers; let i = index\"\n                [value]=\"member\" \n                [label]=\"member\"\n              ></goab-dropdown-item>\n            </goab-dropdown>\n          </goab-form-item>\n          <goab-button-group alignment=\"start\" gap=\"compact\">\n            <goab-button\n              type=\"primary\"\n              size=\"compact\"\n              (onClick)=\"handleBulkAssign()\"\n              [disabled]=\"!selectedAssignee\"\n            >\n              Assign\n            </goab-button>\n            <goab-button\n              type=\"tertiary\"\n              size=\"compact\"\n              (onClick)=\"clearSelection()\"\n            >\n              Clear\n            </goab-button>\n          </goab-button-group>\n        </goab-block>\n      </goab-container>\n\n      <!-- Desktop Table View -->\n      <goab-table *ngIf=\"!isMobile\" width=\"100%\" mb=\"xl\">\n        <thead>\n          <tr>\n            <th style=\"width: 40px\">Select</th>\n            <th style=\"width: 80px\">Priority</th>\n            <th>Case ID</th>\n            <th>Applicant</th>\n            <th>Type</th>\n            <th>Due Date</th>\n            <th style=\"width: 80px\">Status</th>\n            <th style=\"width: 100px\">Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr \n            *ngFor=\"let caseItem of priorityCases\"\n            [style.backgroundColor]=\"caseItem.daysOverdue > 0 ? '#FFF5F5' : undefined\"\n          >\n            <td>\n              <goab-checkbox\n                [name]=\"'case-' + caseItem.id\"\n                [checked]=\"selectedCases.includes(caseItem.id)\"\n                (onChange)=\"onCheckboxChange(caseItem.id, $event)\"\n              ></goab-checkbox>\n            </td>\n            <td>\n              <goab-badge\n                [type]=\"getBadgeType(caseItem.priority)\"\n                [content]=\"caseItem.priority\"\n              ></goab-badge>\n            </td>\n            <td>\n              <goab-text size=\"body-s\" mb=\"none\">\n                {{ caseItem.id }}\n              </goab-text>\n            </td>\n            <td>\n              <goab-text size=\"body-m\" mb=\"none\">\n                {{ caseItem.applicantName }}\n              </goab-text>\n            </td>\n            <td>\n              <goab-text size=\"body-s\" mb=\"none\">\n                {{ caseItem.type }}\n              </goab-text>\n            </td>\n            <td>\n              <goab-block direction=\"column\" gap=\"xs\">\n                <goab-text size=\"body-s\" mb=\"none\">\n                  {{ caseItem.dueDate }}\n                </goab-text>\n                <goab-text *ngIf=\"caseItem.daysOverdue > 0\" size=\"body-xs\" mb=\"none\">\n                  {{ caseItem.daysOverdue }} day{{ caseItem.daysOverdue > 1 ? 's' : '' }} overdue\n                </goab-text>\n              </goab-block>\n            </td>\n            <td>\n              <goab-badge\n                [type]=\"getStatusBadgeType(caseItem.status)\"\n                [content]=\"caseItem.status\"\n              ></goab-badge>\n            </td>\n            <td>\n              <goab-button\n                type=\"tertiary\"\n                size=\"compact\"\n                (onClick)=\"viewCase(caseItem.id)\"\n              >\n                View\n              </goab-button>\n            </td>\n          </tr>\n        </tbody>\n      </goab-table>\n\n      <!-- Mobile Card View -->\n      <goab-block *ngIf=\"isMobile\" direction=\"column\" gap=\"m\" mb=\"xl\">\n        <goab-container\n          *ngFor=\"let caseItem of priorityCases\"\n          accent=\"filled\"\n          mb=\"none\"\n        >\n          <goab-callout \n            *ngIf=\"caseItem.daysOverdue > 0\" \n            type=\"emergency\" \n            size=\"medium\" \n            heading=\"Overdue\" \n            mb=\"s\"\n          >\n            {{ caseItem.daysOverdue }} day{{ caseItem.daysOverdue > 1 ? 's' : '' }} overdue\n          </goab-callout>\n          \n          <goab-grid minChildWidth=\"auto\" gap=\"m\">\n            <goab-block direction=\"column\" gap=\"xs\">\n              <goab-checkbox\n                [name]=\"'case-' + caseItem.id\"\n                [checked]=\"selectedCases.includes(caseItem.id)\"\n                (onChange)=\"onCheckboxChange(caseItem.id, $event)\"\n              ></goab-checkbox>\n            </goab-block>\n            \n            <goab-block direction=\"column\" gap=\"xs\">\n              <goab-block direction=\"row\" gap=\"s\" alignment=\"center\">\n                <goab-badge\n                  [type]=\"getBadgeType(caseItem.priority)\"\n                  [content]=\"caseItem.priority\"\n                ></goab-badge>\n                <goab-badge\n                  [type]=\"getStatusBadgeType(caseItem.status)\"\n                  [content]=\"caseItem.status\"\n                ></goab-badge>\n              </goab-block>\n              \n              <goab-text size=\"body-m\" mb=\"none\">\n                <strong>{{ caseItem.applicantName }}</strong>\n              </goab-text>\n              \n              <goab-text size=\"body-s\" mb=\"none\">\n                {{ caseItem.id }} • {{ caseItem.type }}\n              </goab-text>\n              \n              <goab-text size=\"body-s\" mb=\"none\">\n                Due: {{ caseItem.dueDate }}\n              </goab-text>\n            </goab-block>\n            \n            <goab-block direction=\"column\" gap=\"xs\">\n              <goab-button\n                type=\"tertiary\"\n                size=\"compact\"\n                (onClick)=\"viewCase(caseItem.id)\"\n              >\n                View\n              </goab-button>\n            </goab-block>\n          </goab-grid>\n        </goab-container>\n      </goab-block>\n\n      <!-- Recent Activity -->\n      <goab-container accent=\"filled\">\n        <goab-text size=\"heading-m\" mb=\"m\">\n          Recent Activity\n        </goab-text>\n        <goab-block direction=\"column\" gap=\"m\">\n          <goab-block \n            *ngFor=\"let activity of recentActivity; let i = index\" \n            direction=\"row\" \n            gap=\"m\" \n            alignment=\"center\"\n          >\n            <goab-text size=\"body-s\" mb=\"none\">\n              {{ activity.time }}\n            </goab-text>\n            <goab-text size=\"body-m\" mb=\"none\">\n              {{ activity.action }}\n            </goab-text>\n            <goab-text size=\"body-s\" mb=\"none\">\n              {{ activity.caseId }}\n            </goab-text>\n            <goab-text size=\"body-s\" mb=\"none\">\n              {{ activity.applicant }}\n            </goab-text>\n          </goab-block>\n        </goab-block>\n        <goab-button type=\"tertiary\" size=\"compact\" mt=\"m\">\n          View All Activity\n        </goab-button>\n      </goab-container>\n    </div>\n  `,\n  styleUrls: ['./worker-dashboard.component.css']\n})\nexport class WorkerDashboardComponent implements OnInit {\n  form!: FormGroup;\n  selectedCases: string[] = [];\n  selectedAssignee = '';\n  isMobile = false;\n  \n  workerInfo: WorkerInfo = {\n    name: 'Sarah Johnson',\n    role: 'Case Manager',\n    department: 'Housing Services',\n    employeeId: 'HM-2024-001'\n  };\n  \n  dashboardStats: DashboardStats = {\n    overdueCount: 5,\n    pendingReviewCount: 12,\n    newAssignmentsCount: 8,\n    completedTodayCount: 3\n  };\n  \n  priorityCases: CaseItem[] = [\n    {\n      id: 'HSG-2024-0891',\n      applicantName: 'Martinez, Elena',\n      type: 'Emergency Housing',\n      priority: 'high',\n      dueDate: '2024-01-15',\n      daysOverdue: 2,\n      status: 'pending'\n    },\n    {\n      id: 'HSG-2024-0892',\n      applicantName: 'Thompson, Michael',\n      type: 'Rental Assistance',\n      priority: 'high',\n      dueDate: '2024-01-16',\n      daysOverdue: 1,\n      status: 'pending'\n    },\n    {\n      id: 'HSG-2024-0893',\n      applicantName: 'Chen, Li Wei',\n      type: 'Housing Repair',\n      priority: 'medium',\n      dueDate: '2024-01-17',\n      daysOverdue: 0,\n      status: 'in-progress'\n    }\n  ];\n  \n  recentActivity = [\n    {\n      time: '9:15 AM',\n      action: 'Approved housing application',\n      caseId: 'HSG-2024-0887',\n      applicant: 'Davis, Jennifer'\n    },\n    {\n      time: '8:45 AM',\n      action: 'Requested additional documentation',\n      caseId: 'HSG-2024-0888',\n      applicant: 'Brown, Michael'\n    },\n    {\n      time: '8:30 AM',\n      action: 'Scheduled site inspection',\n      caseId: 'HSG-2024-0889',\n      applicant: 'Wilson, Sarah'\n    }\n  ];\n  \n  teamMembers = [\n    'Johnson, Sarah (Current User)',\n    'Anderson, Mark',\n    'Williams, Jennifer',\n    'Brown, David',\n    'Taylor, Lisa'\n  ];\n\n  constructor(private fb: FormBuilder) {\n    this.form = this.fb.group({\n      assignee: ['']\n    });\n  }\n\n  ngOnInit() {\n    // Initialize responsive handling\n    this.handleResize();\n    window.addEventListener('resize', this.handleResize.bind(this));\n  }\n\n  ngOnDestroy() {\n    window.removeEventListener('resize', this.handleResize.bind(this));\n  }\n\n  handleResize() {\n    this.isMobile = window.innerWidth < 768;\n  }\n  \n  handleCaseSelection(caseId: string, checked: boolean) {\n    if (checked) {\n      this.selectedCases = [...this.selectedCases, caseId];\n    } else {\n      this.selectedCases = this.selectedCases.filter(id => id !== caseId);\n    }\n  }\n  \n  handleBulkAssign() {\n    if (this.selectedCases.length > 0 && this.selectedAssignee) {\n      console.log(`Assigning ${this.selectedCases.length} cases to ${this.selectedAssignee}`);\n      this.selectedCases = [];\n      this.selectedAssignee = '';\n    }\n  }\n\n  clearSelection() {\n    this.selectedCases = [];\n  }\n  \n  onAssigneeChange(event: GoabDropdownOnChangeDetail) {\n    this.selectedAssignee = event.value;\n  }\n  \n  onCheckboxChange(caseId: string, event: GoabCheckboxOnChangeDetail) {\n    this.handleCaseSelection(caseId, event.checked);\n  }\n\n  viewCase(caseId: string) {\n    console.log(`View case ${caseId}`);\n  }\n\n  getBadgeType(priority: string): string {\n    switch (priority) {\n      case 'high': return 'emergency';\n      case 'medium': return 'important';\n      case 'low': return 'information';\n      default: return 'midtone';\n    }\n  }\n\n  getStatusBadgeType(status: string): string {\n    switch (status) {\n      case 'pending': return 'important';\n      case 'in-progress': return 'information';\n      case 'completed': return 'success';\n      default: return 'midtone';\n    }\n  }\n}"
    }
  },
  "usage_guidelines": {
    "when_to_use": [
      "Government worker interfaces requiring case or application management",
      "Administrative dashboards with workload overview and statistics",
      "Professional interfaces with bulk operations on multiple items",
      "Task management systems with priority queues and deadlines",
      "Operational dashboards requiring status monitoring and team coordination"
    ],
    "when_not_to_use": [
      "Citizen-facing public service interfaces",
      "Simple single-purpose tools without complex workflows",
      "Consumer applications without professional use cases",
      "Systems that don't require bulk operations or case management"
    ],
    "best_practices": [
      "Display worker context prominently to establish identity and role",
      "Use color-coded statistics callouts for quick visual scanning",
      "Prioritize overdue or urgent items with visual emphasis",
      "Provide bulk action capabilities for efficiency",
      "Include responsive design for mobile worker access",
      "Show clear status indicators using consistent badge patterns",
      "Provide recent activity for context and audit trail",
      "Use data tables for desktop and cards for mobile viewing",
      "Enable filtering and sorting for large datasets"
    ]
  },
  "variations": [
    {
      "name": "Multi-department dashboard",
      "description": "Support workers managing cases across multiple departments",
      "code_change": "Add department filter: <GoabDropdown label='Department' options={departments} onChange={handleDepartmentFilter} />"
    },
    {
      "name": "Calendar-integrated dashboard",
      "description": "Include upcoming appointments and deadline calendar",
      "code_change": "Add calendar widget: <GoabContainer><h3>Upcoming Deadlines</h3><CalendarWidget events={upcomingDeadlines} /></GoabContainer>"
    },
    {
      "name": "Performance metrics dashboard",
      "description": "Include worker performance and productivity metrics",
      "code_change": "Add metrics section: <GoabCallout type='information' heading='Your Performance'>Cases closed this month: {performanceStats.closedThisMonth}</GoabCallout>"
    },
    {
      "name": "Team collaboration dashboard",
      "description": "Enable team messaging and collaboration features",
      "code_change": "Add team section: <GoabContainer><h3>Team Activity</h3><TeamMessageFeed messages={teamMessages} /></GoabContainer>"
    }
  ],
  "related_patterns": [
    "filter-data-in-a-table",
    "show-status-in-a-table",
    "card-view-of-case-files"
  ]
}