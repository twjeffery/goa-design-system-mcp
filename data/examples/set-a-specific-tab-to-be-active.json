{
  "$schema": "../recipe-schema.json",
  "schemaVersion": "2.1.0-ai-context",
  "recipeId": "set-a-specific-tab-to-be-active",
  "recipeName": "Set a Specific Tab to be Active",
  "category": "interaction-pattern",
  "summary": "Control which tab is initially displayed when a tabbed interface loads, allowing users to land on the most relevant content section",
  "serviceContext": {
    "useCase": "Direct users to specific content sections based on context, workflow state, or user preferences, improving efficiency and reducing navigation steps",
    "userType": "both",
    "governmentServiceFlows": [
      "When citizens return to a multi-section application and need to continue from where they left off",
      "When workers need to focus on specific data views or status categories that require immediate attention",
      "When linking to specific sections of dashboards, reports, or administrative interfaces",
      "When workflow logic determines which content section should be prioritized for user attention"
    ],
    "relatedPatterns": [
      "show-different-views-of-data-in-a-table",
      "card-view-of-case-files",
      "worker-dashboard-overview",
      "filter-data-in-a-table"
    ]
  },
  "components": [
    {
      "componentName": "GoabTabs",
      "role": "Tab container with initial state control",
      "purpose": "Manage tabbed interface with specified initial active tab for controlled user experience"
    },
    {
      "componentName": "GoabTab",
      "role": "Individual tab content panel",
      "purpose": "Display content sections with headings and optional badges for status indication"
    },
    {
      "componentName": "GoabTable",
      "role": "Data display component",
      "purpose": "Present structured data within tab content with proper formatting and layout"
    },
    {
      "componentName": "GoabBadge",
      "role": "Status indicator",
      "purpose": "Show status information and counts within tab headings and table content"
    },
    {
      "componentName": "GoabButton",
      "role": "Action trigger",
      "purpose": "Provide action capabilities within tab content for user interactions"
    }
  ],
  "codeReference": {
    "exampleFile": "set-a-specific-tab-to-be-active.tsx",
    "linesOfCode": 513,
    "lastModified": "2024-01-01T00:00:00.000Z"
  },
  "implementation": {
    "complexity": "medium",
    "keyPatterns": [
      "Initial tab property to control default active state",
      "Tab container with multiple content sections",
      "Complex tab headings with badges and status indicators",
      "Data tables within tab content for structured information display",
      "Badge integration for counts and status visualization"
    ],
    "designPatterns": [
      "Controlled tab initialization",
      "Status-aware tab navigation",
      "Data categorization through tabs",
      "Visual status indicators in navigation",
      "Content-focused tab design"
    ],
    "accessibility": [
      "Proper tab navigation keyboard support maintained",
      "Clear visual indication of active tab state",
      "Badge content provides meaningful status information",
      "Table content within tabs remains accessible",
      "Logical tab order preserved for screen reader users"
    ]
  },
  "codeExamples": {
    "react": {
      "complete": "import { GoabBadge, GoabButton, GoabContainer, GoabTab, GoabTable, GoabTabs, GoabCallout } from \"@abgov/react-components\";\nimport { useState, useEffect } from \"react\";\n\nexport default function SetASpecificTabToBeActive() {\n  const [activeTab, setActiveTab] = useState<number>(2); // Default to \"Complete\" tab (index 2)\n  const [casesData, setCasesData] = useState<any>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [lastUpdate, setLastUpdate] = useState<Date | null>(null);\n\n  // Mock data for different case statuses\n  const reviewPendingCases = [\n    {\n      id: 1,\n      status: 'Review pending',\n      description: 'Business permit application',\n      number: '2024-001-789',\n      priority: 'high',\n      assignedTo: 'Jane Smith',\n      dueDate: '2024-01-25'\n    },\n    {\n      id: 2,\n      status: 'Review pending',\n      description: 'Healthcare service registration',\n      number: '2024-002-156',\n      priority: 'medium',\n      assignedTo: 'Mike Johnson',\n      dueDate: '2024-01-28'\n    },\n    {\n      id: 3,\n      status: 'Review pending',\n      description: 'Tax assessment appeal',\n      number: '2024-003-442',\n      priority: 'urgent',\n      assignedTo: 'Sarah Wilson',\n      dueDate: '2024-01-22'\n    },\n    {\n      id: 4,\n      status: 'Review pending',\n      description: 'Property development application',\n      number: '2024-004-883',\n      priority: 'low',\n      assignedTo: 'Tom Brown',\n      dueDate: '2024-02-01'\n    }\n  ];\n\n  const completedCases = [\n    {\n      id: 5,\n      status: 'Complete',\n      description: 'Driver license renewal processed',\n      number: '2024-005-123',\n      completedBy: 'Alice Cooper',\n      completedDate: '2024-01-15'\n    },\n    {\n      id: 6,\n      status: 'Complete',\n      description: 'Birth certificate issued',\n      number: '2024-006-456',\n      completedBy: 'Bob Davis',\n      completedDate: '2024-01-14'\n    }\n  ];\n\n  const allCases = [...reviewPendingCases, ...completedCases];\n\n  const handleTabChange = (tabIndex: number) => {\n    setActiveTab(tabIndex);\n    \n    // Track tab usage analytics\n    trackTabAnalytics(tabIndex);\n    \n    console.log('Tab changed to:', getTabName(tabIndex));\n  };\n\n  const handleCaseAction = (caseId: number, action: string) => {\n    console.log(`Action '${action}' performed on case:`, caseId);\n    \n    // Simulate case action processing\n    if (action === 'review') {\n      // Handle review action\n      console.log('Opening case for review...');\n    } else if (action === 'view') {\n      // Handle view action\n      console.log('Opening case details...');\n    }\n  };\n\n  const getTabName = (tabIndex: number): string => {\n    const tabNames = ['All', 'Review Pending', 'Complete'];\n    return tabNames[tabIndex] || 'Unknown';\n  };\n\n  const getCaseCounts = () => {\n    return {\n      all: allCases.length,\n      reviewPending: reviewPendingCases.length,\n      complete: completedCases.length\n    };\n  };\n\n  const trackTabAnalytics = (tabIndex: number) => {\n    console.log('Tab analytics:', {\n      tabIndex,\n      tabName: getTabName(tabIndex),\n      timestamp: new Date().toISOString(),\n      userRole: 'case-worker', // This would come from user context\n      previousTab: activeTab\n    });\n  };\n\n  const refreshCaseData = () => {\n    setIsLoading(true);\n    \n    // Simulate data refresh\n    setTimeout(() => {\n      setLastUpdate(new Date());\n      setIsLoading(false);\n      console.log('Case data refreshed');\n    }, 1000);\n  };\n\n  const getStatusBadgeType = (status: string): string => {\n    switch (status) {\n      case 'Review pending':\n        return 'important';\n      case 'Complete':\n        return 'information';\n      default:\n        return 'information';\n    }\n  };\n\n  const getPriorityIndicator = (priority: string) => {\n    const priorityConfig = {\n      urgent: { color: 'emergency', label: 'Urgent' },\n      high: { color: 'important', label: 'High' },\n      medium: { color: 'information', label: 'Medium' },\n      low: { color: 'success', label: 'Low' }\n    };\n    \n    return priorityConfig[priority as keyof typeof priorityConfig] || priorityConfig.medium;\n  };\n\n  const formatDate = (dateString: string): string => {\n    return new Date(dateString).toLocaleDateString('en-CA', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n\n  useEffect(() => {\n    // Simulate initial data load\n    setTimeout(() => {\n      setCasesData(allCases);\n      setIsLoading(false);\n      setLastUpdate(new Date());\n    }, 500);\n  }, []);\n\n  useEffect(() => {\n    // Set initial tab based on URL parameters or context\n    const urlParams = new URLSearchParams(window.location.search);\n    const tabParam = urlParams.get('tab');\n    \n    if (tabParam) {\n      const tabMap: { [key: string]: number } = {\n        'all': 0,\n        'pending': 1,\n        'complete': 2\n      };\n      \n      const targetTab = tabMap[tabParam];\n      if (targetTab !== undefined) {\n        setActiveTab(targetTab);\n      }\n    }\n  }, []);\n\n  const counts = getCaseCounts();\n\n  return (\n    <div className=\"specific-tab-container\">\n      <div className=\"tab-header\">\n        <div className=\"header-content\">\n          <h1>Case Management Dashboard</h1>\n          <p className=\"header-description\">\n            Manage and track case statuses across different workflow stages\n          </p>\n          \n          {lastUpdate && (\n            <div className=\"last-update\">\n              <span>Last updated: {formatDate(lastUpdate.toISOString())}</span>\n              <button \n                type=\"button\" \n                className=\"refresh-button\"\n                onClick={refreshCaseData}\n                disabled={isLoading}\n                aria-label=\"Refresh case data\">\n                {isLoading ? 'Refreshing...' : 'Refresh'}\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n\n      <GoabContainer mt=\"none\" mb=\"none\">\n        <div className=\"tabs-wrapper\">\n          <GoabTabs \n            initialTab={activeTab} \n            onChange={handleTabChange}\n            ariaLabel=\"Case status navigation\">\n            \n            <GoabTab heading=\"All\">\n              <div className=\"tab-content\">\n                <div className=\"content-header\">\n                  <h2>All Cases</h2>\n                  <p>View all cases regardless of status ({counts.all} total)</p>\n                </div>\n                \n                <GoabTable width=\"100%\" caption=\"Complete list of all cases\">\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">Status</th>\n                      <th scope=\"col\">Description</th>\n                      <th scope=\"col\" className=\"goa-table-number-header\">Case Number</th>\n                      <th scope=\"col\">Assigned/Completed By</th>\n                      <th scope=\"col\">Date</th>\n                      <th scope=\"col\">Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {reviewPendingCases.map((caseItem) => (\n                      <tr key={caseItem.id}>\n                        <td>\n                          <GoabBadge \n                            type={getStatusBadgeType(caseItem.status)} \n                            content={caseItem.status} \n                          />\n                        </td>\n                        <td>\n                          <div className=\"case-description\">\n                            <span className=\"description-text\">{caseItem.description}</span>\n                            <GoabBadge \n                              type={getPriorityIndicator(caseItem.priority).color as any}\n                              content={getPriorityIndicator(caseItem.priority).label}\n                              size=\"small\"\n                            />\n                          </div>\n                        </td>\n                        <td className=\"goa-table-number-column\">{caseItem.number}</td>\n                        <td>{caseItem.assignedTo}</td>\n                        <td>{formatDate(caseItem.dueDate)}</td>\n                        <td>\n                          <GoabButton \n                            type=\"tertiary\" \n                            onClick={() => handleCaseAction(caseItem.id, 'review')}\n                            aria-label={`Review case ${caseItem.number}`}>\n                            Review\n                          </GoabButton>\n                        </td>\n                      </tr>\n                    ))}\n                    {completedCases.map((caseItem) => (\n                      <tr key={caseItem.id}>\n                        <td>\n                          <GoabBadge \n                            type={getStatusBadgeType(caseItem.status)} \n                            content={caseItem.status} \n                          />\n                        </td>\n                        <td>{caseItem.description}</td>\n                        <td className=\"goa-table-number-column\">{caseItem.number}</td>\n                        <td>{caseItem.completedBy}</td>\n                        <td>{formatDate(caseItem.completedDate)}</td>\n                        <td>\n                          <GoabButton \n                            type=\"tertiary\" \n                            onClick={() => handleCaseAction(caseItem.id, 'view')}\n                            aria-label={`View case ${caseItem.number}`}>\n                            View\n                          </GoabButton>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </GoabTable>\n              </div>\n            </GoabTab>\n            \n            <GoabTab heading={<>Review pending<GoabBadge type=\"important\" content={counts.reviewPending.toString()}></GoabBadge></>}>\n              <div className=\"tab-content\">\n                <div className=\"content-header\">\n                  <h2>Cases Pending Review</h2>\n                  <p>Cases that require immediate attention and review</p>\n                  \n                  {counts.reviewPending > 0 && (\n                    <GoabCallout type=\"important\" heading=\"Action Required\">\n                      <p>You have {counts.reviewPending} case{counts.reviewPending !== 1 ? 's' : ''} waiting for review. Please prioritize urgent and high-priority items.</p>\n                    </GoabCallout>\n                  )}\n                </div>\n                \n                <GoabTable width=\"100%\" caption=\"Cases requiring review\">\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">Status</th>\n                      <th scope=\"col\">Description</th>\n                      <th scope=\"col\" className=\"goa-table-number-header\">Case Number</th>\n                      <th scope=\"col\">Assigned To</th>\n                      <th scope=\"col\">Due Date</th>\n                      <th scope=\"col\">Priority</th>\n                      <th scope=\"col\">Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {reviewPendingCases.map((caseItem) => (\n                      <tr key={caseItem.id}>\n                        <td>\n                          <GoabBadge \n                            type={getStatusBadgeType(caseItem.status)} \n                            content={caseItem.status} \n                          />\n                        </td>\n                        <td>{caseItem.description}</td>\n                        <td className=\"goa-table-number-column\">{caseItem.number}</td>\n                        <td>{caseItem.assignedTo}</td>\n                        <td>{formatDate(caseItem.dueDate)}</td>\n                        <td>\n                          <GoabBadge \n                            type={getPriorityIndicator(caseItem.priority).color as any}\n                            content={getPriorityIndicator(caseItem.priority).label}\n                          />\n                        </td>\n                        <td>\n                          <GoabButton \n                            type=\"tertiary\" \n                            onClick={() => handleCaseAction(caseItem.id, 'review')}\n                            aria-label={`Review case ${caseItem.number}`}>\n                            Review\n                          </GoabButton>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </GoabTable>\n              </div>\n            </GoabTab>\n            \n            <GoabTab heading={<>Complete<GoabBadge type=\"information\" content={counts.complete.toString()}></GoabBadge></>}>\n              <div className=\"tab-content\">\n                <div className=\"content-header\">\n                  <h2>Completed Cases</h2>\n                  <p>Successfully processed and closed cases</p>\n                </div>\n                \n                <GoabTable width=\"100%\" caption=\"Completed cases\">\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">Status</th>\n                      <th scope=\"col\">Description</th>\n                      <th scope=\"col\" className=\"goa-table-number-header\">Case Number</th>\n                      <th scope=\"col\">Completed By</th>\n                      <th scope=\"col\">Completion Date</th>\n                      <th scope=\"col\">Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {completedCases.map((caseItem) => (\n                      <tr key={caseItem.id}>\n                        <td>\n                          <GoabBadge \n                            type={getStatusBadgeType(caseItem.status)} \n                            content={caseItem.status} \n                          />\n                        </td>\n                        <td>{caseItem.description}</td>\n                        <td className=\"goa-table-number-column\">{caseItem.number}</td>\n                        <td>{caseItem.completedBy}</td>\n                        <td>{formatDate(caseItem.completedDate)}</td>\n                        <td>\n                          <GoabButton \n                            type=\"tertiary\" \n                            onClick={() => handleCaseAction(caseItem.id, 'view')}\n                            aria-label={`View completed case ${caseItem.number}`}>\n                            View Details\n                          </GoabButton>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </GoabTable>\n              </div>\n            </GoabTab>\n          </GoabTabs>\n        </div>\n      </GoabContainer>\n\n      <div className=\"tab-usage-guide\">\n        <h2>Tab Navigation Guide</h2>\n        <ul className=\"usage-list\">\n          <li>\n            <strong>All tab:</strong> Shows comprehensive view of all cases regardless of status\n          </li>\n          <li>\n            <strong>Review Pending tab:</strong> Focuses on cases requiring immediate action with priority indicators\n          </li>\n          <li>\n            <strong>Complete tab:</strong> Displays historical record of successfully processed cases\n          </li>\n          <li>\n            <strong>Badge counts:</strong> Real-time indicators of case volumes in each category\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}",
      "key": "const [activeTab, setActiveTab] = useState<number>(2); // Default to \"Complete\" tab\nconst [casesData, setCasesData] = useState<any>([]);\nconst [isLoading, setIsLoading] = useState<boolean>(true);\nconst [lastUpdate, setLastUpdate] = useState<Date | null>(null);\n\nconst reviewPendingCases = [\n  {\n    id: 1,\n    status: 'Review pending',\n    description: 'Business permit application',\n    number: '2024-001-789',\n    priority: 'high',\n    assignedTo: 'Jane Smith',\n    dueDate: '2024-01-25'\n  }\n];\n\nconst completedCases = [\n  {\n    id: 5,\n    status: 'Complete',\n    description: 'Driver license renewal processed',\n    number: '2024-005-123',\n    completedBy: 'Alice Cooper',\n    completedDate: '2024-01-15'\n  }\n];\n\nconst allCases = [...reviewPendingCases, ...completedCases];\n\nconst handleTabChange = (tabIndex: number) => {\n  setActiveTab(tabIndex);\n  trackTabAnalytics(tabIndex);\n  console.log('Tab changed to:', getTabName(tabIndex));\n};\n\nconst handleCaseAction = (caseId: number, action: string) => {\n  console.log(`Action '${action}' performed on case:`, caseId);\n  \n  if (action === 'review') {\n    console.log('Opening case for review...');\n  } else if (action === 'view') {\n    console.log('Opening case details...');\n  }\n};\n\nconst getTabName = (tabIndex: number): string => {\n  const tabNames = ['All', 'Review Pending', 'Complete'];\n  return tabNames[tabIndex] || 'Unknown';\n};\n\nconst getCaseCounts = () => {\n  return {\n    all: allCases.length,\n    reviewPending: reviewPendingCases.length,\n    complete: completedCases.length\n  };\n};\n\nconst trackTabAnalytics = (tabIndex: number) => {\n  console.log('Tab analytics:', {\n    tabIndex,\n    tabName: getTabName(tabIndex),\n    timestamp: new Date().toISOString(),\n    userRole: 'case-worker',\n    previousTab: activeTab\n  });\n};\n\nconst getStatusBadgeType = (status: string): string => {\n  switch (status) {\n    case 'Review pending':\n      return 'important';\n    case 'Complete':\n      return 'information';\n    default:\n      return 'information';\n  }\n};\n\nconst formatDate = (dateString: string): string => {\n  return new Date(dateString).toLocaleDateString('en-CA', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  });\n};\n\n// Set initial tab based on URL parameters or context\nuseEffect(() => {\n  const urlParams = new URLSearchParams(window.location.search);\n  const tabParam = urlParams.get('tab');\n  \n  if (tabParam) {\n    const tabMap: { [key: string]: number } = {\n      'all': 0,\n      'pending': 1,\n      'complete': 2\n    };\n    \n    const targetTab = tabMap[tabParam];\n    if (targetTab !== undefined) {\n      setActiveTab(targetTab);\n    }\n  }\n}, []);\n\nconst counts = getCaseCounts();\n\n<div className=\"specific-tab-container\">\n  <GoabContainer mt=\"none\" mb=\"none\">\n    <div className=\"tabs-wrapper\">\n      <GoabTabs \n        initialTab={activeTab} \n        onChange={handleTabChange}\n        ariaLabel=\"Case status navigation\">\n        \n        <GoabTab heading=\"All\">\n          <div className=\"tab-content\">\n            <div className=\"content-header\">\n              <h2>All Cases</h2>\n              <p>View all cases regardless of status ({counts.all} total)</p>\n            </div>\n            \n            <GoabTable width=\"100%\" caption=\"Complete list of all cases\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Status</th>\n                  <th scope=\"col\">Description</th>\n                  <th scope=\"col\" className=\"goa-table-number-header\">Case Number</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {allCases.map((caseItem) => (\n                  <tr key={caseItem.id}>\n                    <td>\n                      <GoabBadge \n                        type={getStatusBadgeType(caseItem.status)} \n                        content={caseItem.status} \n                      />\n                    </td>\n                    <td>{caseItem.description}</td>\n                    <td className=\"goa-table-number-column\">{caseItem.number}</td>\n                    <td>\n                      <GoabButton \n                        type=\"tertiary\" \n                        onClick={() => handleCaseAction(caseItem.id, 'view')}\n                        aria-label={`View case ${caseItem.number}`}>\n                        View\n                      </GoabButton>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </GoabTable>\n          </div>\n        </GoabTab>\n        \n        <GoabTab heading={<>Review pending<GoabBadge type=\"important\" content={counts.reviewPending.toString()}></GoabBadge></>}>\n          <div className=\"tab-content\">\n            <h2>Cases Pending Review</h2>\n            <GoabTable width=\"100%\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Status</th>\n                  <th scope=\"col\">Description</th>\n                  <th scope=\"col\" className=\"goa-table-number-header\">Case Number</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {reviewPendingCases.map((caseItem) => (\n                  <tr key={caseItem.id}>\n                    <td>\n                      <GoabBadge \n                        type={getStatusBadgeType(caseItem.status)} \n                        content={caseItem.status} \n                      />\n                    </td>\n                    <td>{caseItem.description}</td>\n                    <td className=\"goa-table-number-column\">{caseItem.number}</td>\n                    <td>\n                      <GoabButton \n                        type=\"tertiary\" \n                        onClick={() => handleCaseAction(caseItem.id, 'review')}\n                        aria-label={`Review case ${caseItem.number}`}>\n                        Review\n                      </GoabButton>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </GoabTable>\n          </div>\n        </GoabTab>\n        \n        <GoabTab heading={<>Complete<GoabBadge type=\"information\" content={counts.complete.toString()}></GoabBadge></>}>\n          <div className=\"tab-content\">\n            <h2>Completed Cases</h2>\n            <GoabTable width=\"100%\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Status</th>\n                  <th scope=\"col\">Description</th>\n                  <th scope=\"col\" className=\"goa-table-number-header\">Case Number</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {completedCases.map((caseItem) => (\n                  <tr key={caseItem.id}>\n                    <td>\n                      <GoabBadge \n                        type={getStatusBadgeType(caseItem.status)} \n                        content={caseItem.status} \n                      />\n                    </td>\n                    <td>{caseItem.description}</td>\n                    <td className=\"goa-table-number-column\">{caseItem.number}</td>\n                    <td>\n                      <GoabButton \n                        type=\"tertiary\" \n                        onClick={() => handleCaseAction(caseItem.id, 'view')}\n                        aria-label={`View case ${caseItem.number}`}>\n                        View Details\n                      </GoabButton>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </GoabTable>\n          </div>\n        </GoabTab>\n      </GoabTabs>\n    </div>\n  </GoabContainer>\n</div>\n\n/* CSS */\n.specific-tab-container {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: var(--goa-space-l);\n}\n\n.tab-header {\n  margin-bottom: var(--goa-space-xl);\n  padding-bottom: var(--goa-space-l);\n  border-bottom: 1px solid var(--goa-color-border);\n}\n\n.header-content h1 {\n  margin: 0 0 var(--goa-space-s) 0;\n  color: var(--goa-color-text);\n}\n\n.header-description {\n  margin: 0 0 var(--goa-space-m) 0;\n  color: var(--goa-color-text-secondary);\n  font-size: var(--goa-font-size-l);\n}\n\n.last-update {\n  display: flex;\n  align-items: center;\n  gap: var(--goa-space-m);\n  color: var(--goa-color-text-secondary);\n  font-size: var(--goa-font-size-s);\n}\n\n.refresh-button {\n  background: none;\n  border: 1px solid var(--goa-color-interactive);\n  color: var(--goa-color-interactive);\n  padding: var(--goa-space-xs) var(--goa-space-s);\n  border-radius: var(--goa-border-radius-s);\n  cursor: pointer;\n  font-size: var(--goa-font-size-s);\n}\n\n.refresh-button:hover:not(:disabled) {\n  background-color: var(--goa-color-interactive-light);\n}\n\n.refresh-button:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n.tabs-wrapper {\n  padding: var(--goa-space-l);\n}\n\n.tab-content {\n  padding: var(--goa-space-l) 0;\n}\n\n.content-header {\n  margin-bottom: var(--goa-space-l);\n}\n\n.content-header h2 {\n  margin: 0 0 var(--goa-space-s) 0;\n  color: var(--goa-color-text);\n}\n\n.content-header p {\n  margin: 0 0 var(--goa-space-m) 0;\n  color: var(--goa-color-text-secondary);\n}\n\n.case-description {\n  display: flex;\n  flex-direction: column;\n  gap: var(--goa-space-xs);\n}\n\n.description-text {\n  font-weight: 500;\n  color: var(--goa-color-text);\n}\n\n.tab-usage-guide {\n  margin-top: var(--goa-space-2xl);\n  padding: var(--goa-space-l);\n  background-color: var(--goa-color-background-light);\n  border-radius: var(--goa-border-radius-s);\n  border-left: 4px solid var(--goa-color-interactive);\n}\n\n.tab-usage-guide h2 {\n  margin: 0 0 var(--goa-space-m) 0;\n  color: var(--goa-color-text);\n}\n\n.usage-list {\n  margin: 0;\n  padding-left: var(--goa-space-l);\n}\n\n.usage-list li {\n  margin-bottom: var(--goa-space-s);\n  line-height: 1.5;\n}\n\n.usage-list strong {\n  color: var(--goa-color-text);\n}\n\n@media (max-width: 768px) {\n  .specific-tab-container {\n    padding: var(--goa-space-m);\n  }\n  \n  .tabs-wrapper {\n    padding: var(--goa-space-m);\n  }\n  \n  .last-update {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: var(--goa-space-s);\n  }\n}"
    },
    "angular": {
      "complete": "export class SetASpecificTabToBeActiveComponent {\n  activeTab: number = 2; // Default to \"Complete\" tab (index 2)\n  casesData: any[] = [];\n  isLoading: boolean = true;\n  lastUpdate: Date | null = null;\n\n  reviewPendingCases = [\n    {\n      id: 1,\n      status: 'Review pending',\n      description: 'Business permit application',\n      number: '2024-001-789',\n      priority: 'high',\n      assignedTo: 'Jane Smith',\n      dueDate: '2024-01-25'\n    },\n    {\n      id: 2,\n      status: 'Review pending',\n      description: 'Healthcare service registration',\n      number: '2024-002-156',\n      priority: 'medium',\n      assignedTo: 'Mike Johnson',\n      dueDate: '2024-01-28'\n    }\n  ];\n\n  completedCases = [\n    {\n      id: 5,\n      status: 'Complete',\n      description: 'Driver license renewal processed',\n      number: '2024-005-123',\n      completedBy: 'Alice Cooper',\n      completedDate: '2024-01-15'\n    },\n    {\n      id: 6,\n      status: 'Complete',\n      description: 'Birth certificate issued',\n      number: '2024-006-456',\n      completedBy: 'Bob Davis',\n      completedDate: '2024-01-14'\n    }\n  ];\n\n  allCases = [...this.reviewPendingCases, ...this.completedCases];\n\n  ngOnInit() {\n    // Simulate initial data load\n    setTimeout(() => {\n      this.casesData = this.allCases;\n      this.isLoading = false;\n      this.lastUpdate = new Date();\n    }, 500);\n  }\n\n  handleTabChange(tabIndex: number) {\n    this.activeTab = tabIndex;\n    this.trackTabAnalytics(tabIndex);\n    console.log('Tab changed to:', this.getTabName(tabIndex));\n  }\n\n  handleCaseAction(caseId: number, action: string) {\n    console.log(`Action '${action}' performed on case:`, caseId);\n    \n    if (action === 'review') {\n      console.log('Opening case for review...');\n    } else if (action === 'view') {\n      console.log('Opening case details...');\n    }\n  }\n\n  getTabName(tabIndex: number): string {\n    const tabNames = ['All', 'Review Pending', 'Complete'];\n    return tabNames[tabIndex] || 'Unknown';\n  }\n\n  getCaseCounts() {\n    return {\n      all: this.allCases.length,\n      reviewPending: this.reviewPendingCases.length,\n      complete: this.completedCases.length\n    };\n  }\n\n  trackTabAnalytics(tabIndex: number) {\n    console.log('Tab analytics:', {\n      tabIndex,\n      tabName: this.getTabName(tabIndex),\n      timestamp: new Date().toISOString(),\n      userRole: 'case-worker',\n      previousTab: this.activeTab\n    });\n  }\n\n  refreshCaseData() {\n    this.isLoading = true;\n    \n    setTimeout(() => {\n      this.lastUpdate = new Date();\n      this.isLoading = false;\n      console.log('Case data refreshed');\n    }, 1000);\n  }\n\n  getStatusBadgeType(status: string): string {\n    switch (status) {\n      case 'Review pending':\n        return 'important';\n      case 'Complete':\n        return 'information';\n      default:\n        return 'information';\n    }\n  }\n\n  getPriorityIndicator(priority: string) {\n    const priorityConfig: { [key: string]: { color: string; label: string } } = {\n      urgent: { color: 'emergency', label: 'Urgent' },\n      high: { color: 'important', label: 'High' },\n      medium: { color: 'information', label: 'Medium' },\n      low: { color: 'success', label: 'Low' }\n    };\n    \n    return priorityConfig[priority] || priorityConfig['medium'];\n  }\n\n  formatDate(dateString: string): string {\n    return new Date(dateString).toLocaleDateString('en-CA', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  }\n}",
      "key": "activeTab: number = 2; // Default to \"Complete\" tab (index 2)\ncasesData: any[] = [];\nisLoading: boolean = true;\nlastUpdate: Date | null = null;\n\nreviewPendingCases = [\n  {\n    id: 1,\n    status: 'Review pending',\n    description: 'Business permit application',\n    number: '2024-001-789',\n    priority: 'high',\n    assignedTo: 'Jane Smith',\n    dueDate: '2024-01-25'\n  }\n];\n\ncompletedCases = [\n  {\n    id: 5,\n    status: 'Complete',\n    description: 'Driver license renewal processed',\n    number: '2024-005-123',\n    completedBy: 'Alice Cooper',\n    completedDate: '2024-01-15'\n  }\n];\n\nallCases = [...this.reviewPendingCases, ...this.completedCases];\n\nhandleTabChange(tabIndex: number) {\n  this.activeTab = tabIndex;\n  this.trackTabAnalytics(tabIndex);\n  console.log('Tab changed to:', this.getTabName(tabIndex));\n}\n\nhandleCaseAction(caseId: number, action: string) {\n  console.log(`Action '${action}' performed on case:`, caseId);\n  \n  if (action === 'review') {\n    console.log('Opening case for review...');\n  } else if (action === 'view') {\n    console.log('Opening case details...');\n  }\n}\n\ngetTabName(tabIndex: number): string {\n  const tabNames = ['All', 'Review Pending', 'Complete'];\n  return tabNames[tabIndex] || 'Unknown';\n}\n\ngetCaseCounts() {\n  return {\n    all: this.allCases.length,\n    reviewPending: this.reviewPendingCases.length,\n    complete: this.completedCases.length\n  };\n}\n\ntrackTabAnalytics(tabIndex: number) {\n  console.log('Tab analytics:', {\n    tabIndex,\n    tabName: this.getTabName(tabIndex),\n    timestamp: new Date().toISOString(),\n    userRole: 'case-worker',\n    previousTab: this.activeTab\n  });\n}\n\ngetStatusBadgeType(status: string): string {\n  switch (status) {\n    case 'Review pending':\n      return 'important';\n    case 'Complete':\n      return 'information';\n    default:\n      return 'information';\n  }\n}\n\nformatDate(dateString: string): string {\n  return new Date(dateString).toLocaleDateString('en-CA', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  });\n}\n\n<!-- Template -->\n<div class=\"specific-tab-container\">\n  <div class=\"tab-header\">\n    <div class=\"header-content\">\n      <h1>Case Management Dashboard</h1>\n      <p class=\"header-description\">\n        Manage and track case statuses across different workflow stages\n      </p>\n      \n      <div class=\"last-update\" *ngIf=\"lastUpdate\">\n        <span>Last updated: {{ formatDate(lastUpdate.toISOString()) }}</span>\n        <button \n          type=\"button\" \n          class=\"refresh-button\"\n          (click)=\"refreshCaseData()\"\n          [disabled]=\"isLoading\"\n          aria-label=\"Refresh case data\">\n          {{ isLoading ? 'Refreshing...' : 'Refresh' }}\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <goab-container mt=\"none\" mb=\"none\">\n    <div class=\"tabs-wrapper\">\n      <goab-tabs \n        [initialTab]=\"activeTab\" \n        (onChange)=\"handleTabChange($event)\"\n        ariaLabel=\"Case status navigation\">\n        \n        <goab-tab heading=\"All\">\n          <div class=\"tab-content\">\n            <div class=\"content-header\">\n              <h2>All Cases</h2>\n              <p>View all cases regardless of status ({{ getCaseCounts().all }} total)</p>\n            </div>\n            \n            <goab-table width=\"100%\" caption=\"Complete list of all cases\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Status</th>\n                  <th scope=\"col\">Description</th>\n                  <th scope=\"col\" class=\"goa-table-number-header\">Case Number</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let caseItem of allCases\">\n                  <td>\n                    <goab-badge \n                      [type]=\"getStatusBadgeType(caseItem.status)\" \n                      [content]=\"caseItem.status\">\n                    </goab-badge>\n                  </td>\n                  <td>{{ caseItem.description }}</td>\n                  <td class=\"goa-table-number-column\">{{ caseItem.number }}</td>\n                  <td>\n                    <goab-button \n                      type=\"tertiary\" \n                      (onClick)=\"handleCaseAction(caseItem.id, 'view')\"\n                      [attr.aria-label]=\"'View case ' + caseItem.number\">\n                      View\n                    </goab-button>\n                  </td>\n                </tr>\n              </tbody>\n            </goab-table>\n          </div>\n        </goab-tab>\n        \n        <goab-tab [heading]=\"reviewPendingHeading\">\n          <ng-template #reviewPendingHeading>\n            Review pending\n            <goab-badge type=\"important\" [content]=\"getCaseCounts().reviewPending.toString()\"></goab-badge>\n          </ng-template>\n          \n          <div class=\"tab-content\">\n            <h2>Cases Pending Review</h2>\n            <goab-table width=\"100%\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Status</th>\n                  <th scope=\"col\">Description</th>\n                  <th scope=\"col\" class=\"goa-table-number-header\">Case Number</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let caseItem of reviewPendingCases\">\n                  <td>\n                    <goab-badge \n                      [type]=\"getStatusBadgeType(caseItem.status)\" \n                      [content]=\"caseItem.status\">\n                    </goab-badge>\n                  </td>\n                  <td>{{ caseItem.description }}</td>\n                  <td class=\"goa-table-number-column\">{{ caseItem.number }}</td>\n                  <td>\n                    <goab-button \n                      type=\"tertiary\" \n                      (onClick)=\"handleCaseAction(caseItem.id, 'review')\"\n                      [attr.aria-label]=\"'Review case ' + caseItem.number\">\n                      Review\n                    </goab-button>\n                  </td>\n                </tr>\n              </tbody>\n            </goab-table>\n          </div>\n        </goab-tab>\n        \n        <goab-tab [heading]=\"completeHeading\">\n          <ng-template #completeHeading>\n            Complete\n            <goab-badge type=\"information\" [content]=\"getCaseCounts().complete.toString()\"></goab-badge>\n          </ng-template>\n          \n          <div class=\"tab-content\">\n            <h2>Completed Cases</h2>\n            <goab-table width=\"100%\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Status</th>\n                  <th scope=\"col\">Description</th>\n                  <th scope=\"col\" class=\"goa-table-number-header\">Case Number</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let caseItem of completedCases\">\n                  <td>\n                    <goab-badge \n                      [type]=\"getStatusBadgeType(caseItem.status)\" \n                      [content]=\"caseItem.status\">\n                    </goab-badge>\n                  </td>\n                  <td>{{ caseItem.description }}</td>\n                  <td class=\"goa-table-number-column\">{{ caseItem.number }}</td>\n                  <td>\n                    <goab-button \n                      type=\"tertiary\" \n                      (onClick)=\"handleCaseAction(caseItem.id, 'view')\"\n                      [attr.aria-label]=\"'View case ' + caseItem.number\">\n                      View Details\n                    </goab-button>\n                  </td>\n                </tr>\n              </tbody>\n            </goab-table>\n          </div>\n        </goab-tab>\n      </goab-tabs>\n    </div>\n  </goab-container>\n</div>"
    }
  },
  "tags": [
    "tabs",
    "initial-tab",
    "tab-control",
    "active-tab",
    "tab-navigation",
    "interaction-pattern",
    "tab-state",
    "default-tab",
    "tab-initialization",
    "controlled-navigation"
  ]
}